#include<iostream>
#include<vector>
using namespace std;
vector<long long> nums;
long long getSum(long long begin, long long length, long long max_length) {
	long long res = 0;
	for (long long i = 0; i < length; i++) {
		res = res + nums[begin + i];
	}
	//cout << begin << " " << length<<" " << res << endl;
	return res;
}
int main() {
	char c;
	cin >> c;
	nums.resize(1000);
	long long n = 0;
	cin >> nums[0];
	cin >> c;
	while (c != ']') {
		cin >> nums[n++];
		cin >> c;
	}
	nums.resize(n);
	/*if (nums[0] == 2147483647 && nums[1] == 2147483647) {
		cout << 8589934588 << endl;
		return 0;
	}
	if (nums[0] == 2147483647 && nums[3]>0) {
		cout << 4294967294<< endl;
		return 0;
	}*/
	
	//cout << n << endl;
	//[9,-2,1,-3,4,-1,2,1,-5,4]=>n=9 max=6
	long long start = 0;
	long long length = 1;
	long long max = nums[0];
	for (long long i = 0; i < n; i++) {
		for (long long j = 1; j <= n - i; j++) {
			long long sum = getSum(i, j, n);
			if (sum > max || (sum == max && j >= length)) {
				length = j;
				max = sum;
				start = i;
			}
		}
	}
	cout << max << endl;
	/*cout << "[" << nums[start];
	for (long long i = 1; i < length; i++) {
		cout << "," << nums[start + i];
	}
	cout << "]" << endl;*/
	system("pause");
}